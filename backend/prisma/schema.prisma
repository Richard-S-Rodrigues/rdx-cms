generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db?socket_timeout=10&connection_limit=1"
}

model User {
  id         String @id @default(uuid())
  first_name String
  last_name  String
  email      String @unique
  password   String

  projects           Project[]
  blog_posts         BlogPost[]
  resetPasswordToken ResetPasswordToken?

  @@map("users")
}

model ResetPasswordToken {
  id         String   @id @default(uuid())
  token      String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @unique
  created_at DateTime @default(now())

  @@map("resetPasswordTokens")
}

model Project {
  id   String @id @default(uuid())
  name String

  creator User @relation(fields: [creator_id], references: [id], onDelete: Cascade)

  creator_id String
  members    ProjectMember[]
  blog_posts BlogPost[]
  created_at DateTime        @default(now())

  @@map("projects")
}

model ProjectMember {
  id         String   @id @default(uuid())
  name       String   @default("")
  project    Project  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  project_id String
  member_id  String
  is_creator Boolean  @default(false)
  role       String   @default("Editor")
  created_at DateTime @default(now())

  @@map("projectMembers")
}

model BlogPost {
  id          String   @id @default(uuid())
  title       String
  description String
  content     String
  project     Project  @relation(fields: [project_id], references: [id])
  project_id  String
  author      User     @relation(fields: [author_id], references: [id])
  author_id   String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  @@map("blogPosts")
}
